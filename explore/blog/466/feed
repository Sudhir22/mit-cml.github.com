<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xml:base="http://explore.appinventor.mit.edu"  xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel>
 <title>Ryan&#039;s blog</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan</link>
 <description></description>
 <language>en</language>
<item>
 <title>YouTuber Tutorials! - Week of December 7, 2015</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/12</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-f29243f0-8240-f0c7-d5b2-8734168b2251&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Introduction to MIT App Inventor 2&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-f29243f0-8240-f0c7-d5b2-8734168b2251&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;If you are completely new to MIT App Inventor 2, &lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC7cneLNmyR6NI_PtvlnV7sw&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Startandfly&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt; has a video that aims to introduce you to the program and its basic functions. In this introductory video, a brief description of the design tab and the blocks tab is provided before taking you through some simple steps to create a very simple app. The final part of the video details how to test, save, and export apps. Very handy tutorial for first-timers!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-f29243f0-8240-f0c7-d5b2-8734168b2251&quot;&gt;&lt;span style=&quot;text-decoration: underline; font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BOPU1ZKDQ2k&quot; style=&quot;text-decoration:none;&quot;&gt;https://www.youtube.com/watch?v=BOPU1ZKDQ2k&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; font-style: italic; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;MIT App Inventor Basics&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-f29243f0-8240-f0c7-d5b2-8734168b2251&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCY8oaqFgQnr7WkDe1n8n2DA&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;TeenCode&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt; has another introductory tutorial to MIT App Inventor 2. This video establishes the basic components of the program’s layout, exemplifies a few of the most commonly used aspects of the app, and a brief description of the blocks function. Throughout the tutorial, a simple app creating a button with text to speech is created to guide users through the creation process.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-f29243f0-8240-f0c7-d5b2-8734168b2251&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=mFh6vwbnv9M&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;https://www.youtube.com/watch?v=mFh6vwbnv9M&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;br class=&quot;kix-line-break&quot; /&gt;&lt;br class=&quot;kix-line-break&quot; /&gt;&lt;span id=&quot;docs-internal-guid-f29243f0-8240-f0c7-d5b2-8734168b2251&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Stock Market App&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-f29243f0-8240-f0c7-d5b2-8734168b2251&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCWYZUfnS0aMVTiIfntEW1NA&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;David Wolber&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt; has a handy video tutorial on how to utilize information pulled from a website within MIT App Inventor 2. This video teaches you how to build an app that specifically deals with viewing information related to Google’s stock the Stock Market. The video comes in two parts: the first part teaches how to get your app talking to an API, and the second part goes into greater detail on how to organize the content of the app. Be sure to check out both videos!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=sZAImC_NAhE&quot; style=&quot;line-height: 1.2; text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;https://www.youtube.com/watch?v=sZAImC_NAhE&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Tue, 08 Dec 2015 15:43:24 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">678 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>YouTuber Tutorials! - Week of November 16, 2015</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/11-0</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Blog Post # 8&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;YouTuber Tutorials - Week of November 16&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Componentes Sound e Clock&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;To continue our promotion of YouTubers that don’t only cater to the English speaker, here’s a YouTuber posting videos in Portuguese. &lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCDyXUENysC8uQTAYKLT253g&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;António Mansilha&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt; has been posting many tutorials over a short time period recently, with simple yet silent videos guiding users through a few simpler processes. If you’re a Portuguese speaker just getting started with MIT App Inventor, be sure to browse his channel! &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;One of his most recent videos details how to utilize a clock within your app, as well as how to add sounds. Both of these functions can be incredibly useful for many different types of apps, so take a look!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ZS3v0IYe3Io&quot; style=&quot;font-family: Cambria; font-size: 16px; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;https://www.youtube.com/watch?v=ZS3v0IYe3Io&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; font-style: italic; line-height: 1.2; white-space: pre-wrap; background-color: transparent;&quot;&gt;A Tutorial Tutorial - Windows&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;User &lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCvQ3bZiKgUgl9wzb2veN7Iw&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;mister mac&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt; doesn’t have any tutorials directly teaching anything about MIT App Inventor, but they did post a helpful video for anyone interested in optimizing their tutorial-using skills. The video entitled Using App inventor with Tutorials is meant to aid those who may wish to optimize the efficiency of their window-&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;switching while utilizing a tutorial and simultaneously building your app. This video is most helpful for users without dual-monitors or a printer as it’s meant to aid those with only one screen, and you should know this tutorial uses the Windows platform and may not be as pertinent for Mac. &lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6Y4Xv4Munn8&quot; style=&quot;font-family: Cambria; font-size: 16px; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;https://www.youtube.com/watch?v=6Y4Xv4Munn8&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; font-style: italic; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;Story Generator&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCSUPt0WY0zq9EhadiuQAPpw&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Digital Ether&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt; is an MIT App Inventor user who shared a fun little tutorial for an app that randomly generates a story. The app uses a randomizer for general pieces of a story--including location, situation, and event in his example, but he encourages you use as many pieces as you like--to produce a simple, general idea for a story. &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;This app includes many functions useful for other apps, such as the randomizer, using lists, taking advantage of the “global” mechanics, changing text of labels, and utilizing buttons. Right now, AppInventor Stories is Digital Ether’s only upload, but we are hopeful they will upload more soon! &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;docs-internal-guid-beaeca81-10d6-228e-cade-fdf4cd0ea7c7&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=7LSPO7ouFoM&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;&quot;&gt;https://www.youtube.com/watch?v=7LSPO7ouFoM&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 16 Nov 2015 15:10:34 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">665 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>YouTuber Tutorials! - Week of November 9, 2015</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/11</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-6b624847-f20b-3337-2a2d-612d211af042&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; white-space: pre-wrap; background-color: transparent;&quot;&gt;Barcode Scanner&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;For our Spanish-speaking audience, we have a YouTube channel that teaches its lessons entirely in Spanish. &lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCTrQFPQYfQNUBxoAPPFUqiw&quot; style=&quot;line-height: 1.2; font-size: 13.008px;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Curso de App Inventor 2&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt; has here a playlist of videos teaching how to use the barcode scanner component to check the seating capacity of a movie theater. The owner of the channel will definitely be posting more tutorials in the future, so if you’re a Spanish speaking App Inventor, be sure to follow Curso de App Inventor 2 on YouTube!&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLzO5-MPKHbfiycKPb6lu5Y_MlhUnOjwkJ&quot; style=&quot;font-family: Cambria; font-size: 16px; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;https://www.youtube.com/playlist?list=PLzO5-MPKHbfiycKPb6lu5Y_MlhUnOjwkJ&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; font-style: italic; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;The Dodge Game&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;If making games is your schtick, &lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/user/appinventorprojects&quot; style=&quot;line-height: 1.2; font-size: 13.008px;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Scott Ferguson&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt; has a tutorial you may be interested in. This tutorial leads you through the process of creating a game in which you control a dot that must avoid contact with other dots moving around the screen randomly. This game will keep track of points, move dots around a canvas, allow you to control a dot, and detect collision, so get ready for an in-depth tutorial with lots of useful tips and tricks that can be useful for many other apps. &lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;Scott’s got a few other tutorials on his channel so be sure to check those out as well!&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCC2bI5qUXxTKLMlkV3Kc0KA&quot; style=&quot;font-family: Cambria; font-size: 16px; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;https://www.youtube.com/channel/UCC2bI5qUXxTKLMlkV3Kc0KA&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; font-style: italic; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;Magic 8 Ball Tutorial&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCuFewCb0cwqhsJyrVVfmhcQ&quot; style=&quot;line-height: 1.2; font-size: 13.008px;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;Ben Lewis&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt; decided to use one of MIT App Inventor’s tutorials from our main website and create a larger, more in-depth video to help out anyone who may have been having trouble following the steps without watching someone do it themselves. This app will emulate a magic 8 ball and provide wise answers to any question with a simple shake of your mobile device. &lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;Don’t forget to check out his other videos, since he has a couple of other tutorials already posted! &lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=HCdvJ7rpJuY&quot; style=&quot;font-size: 13.008px; line-height: 1.538em;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;https://www.youtube.com/watch?v=HCdvJ7rpJuY&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Tue, 10 Nov 2015 15:40:18 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">661 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>YouTuber Tutorials - Week of October 26, 2015</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/10-0</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-a453-70d4-c47f-278cc07c37fe&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; white-space: pre-wrap; background-color: transparent;&quot;&gt;Bubble Sorting&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-a453-70d4-c47f-278cc07c37fe&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCEc6b9DBFQMOtRalJIJik2A&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;span style=&quot;font-size: 13.3333px; font-family: Arial; white-space: pre-wrap;&quot;&gt;App Inventor Teacher&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; white-space: pre-wrap; background-color: transparent;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;is a wonderful YouTuber with several MIT App Inventor tutorials. App Inventor Teacher is clear and concise in his instruction and definitely has the knowledge to teach new and experienced users a thing or two. &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-a453-70d4-c47f-278cc07c37fe&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;One of his most recently uploads is a video that shows how to create a function for Bubble Sorting, which is a method of sorting that checks to see if numbers in a list are in order from lowest to highest, and, if not, automatically moves them until they are.  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-a453-70d4-c47f-278cc07c37fe&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=xMxAAAj7QrQ&quot;&gt;https://www.youtube.com/watch?v=xMxAAAj7QrQ&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-a453-70d4-c47f-278cc07c37fe&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; white-space: pre-wrap; background-color: transparent;&quot;&gt;Switching Between Screens&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-a453-70d4-c47f-278cc07c37fe&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC3u4GrfwMEN-mAU-eBPuBxw&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;span style=&quot;font-size: 13.3333px; font-family: Arial; white-space: pre-wrap;&quot;&gt;Dan Rhode&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt; recently made a short and sweet tutorial on how to switch between screens within an app. If you’re interested in creating an app in which you need to switch between multiple screens, this is a good tutorial for you! &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-a453-70d4-c47f-278cc07c37fe&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;Dan Rhode has been posting tutorial videos for a long time, so even if this tutorial may not help you with your specific needs, he probably has at least one video to help with something you’d like to learn!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=h9I1hvPVtjU&quot; style=&quot;font-family: Cambria; font-size: 16px; white-space: pre-wrap; line-height: 1.2; background-color: transparent;&quot;&gt;https://www.youtube.com/watch?v=h9I1hvPVtjU&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;color: rgb(46, 46, 46); font-family: Cambria; font-size: 16px; font-style: italic; line-height: 1.2; white-space: pre-wrap; background-color: transparent;&quot;&gt;Building Blocks Principles&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCZOesHd4hagGrMTU5IU1YKg&quot; style=&quot;font-size: 13.008px; line-height: 1.2;&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;span style=&quot;font-size: 13.3333px; font-family: Arial; white-space: pre-wrap;&quot;&gt;BHCComputerProf&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 13.008px; line-height: 1.538em; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; white-space: pre-wrap; background-color: transparent;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;line-height: 1.538em; font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;is a YouTuber that just started posting videos recently, only having 3 in their gallery by the date of this post. Their latest video details a great deal of information regarding the blocks system in MIT App Inventor, how the blocks translate from coding language and how they function within the program. This video is incredibly thorough and will not only lead you through block functionality, but will also highlight many of the great qualities offered by the vast array of options, both inherent and variable. &lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XjHtqK2uYIE&quot; style=&quot;font-size: 13.008px; line-height: 1.538em;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;https://www.youtube.com/watch?v=XjHtqK2uYIE&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 26 Oct 2015 13:30:31 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">655 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>YouTuber Tutorials This Week!</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/10</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-8140-2a68-9080-3fb6b24bf59e&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; white-space: pre-wrap; background-color: transparent;&quot;&gt;List Randomizer, Item Deletion, and Reloading Tutorial&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-8140-2a68-9080-3fb6b24bf59e&quot; style=&quot;font-size: 13.008px; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;If you’ve been keeping up with my blog posts, you know I recently created a personal app for my musical projects to introduce myself to MIT App Inventor, and that one of the functions I was utilizing was the list randomizer function. I wanted to make sure the list never provided the same answer twice, and doing so took quite a long span of experimentation, trial, and error.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-8140-2a68-9080-3fb6b24bf59e&quot; style=&quot;font-size: 13.008px; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;Well, as of October 6, 2015, there is now a tutorial on YouTube thanks to &lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCbpW_ozrZvcr-m34r4sUODA&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(0, 0, 0); white-space: pre-wrap; background-color: transparent;&quot;&gt;azaotl&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; white-space: pre-wrap; background-color: transparent;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;that explains a much better method than my roundabout newbie one. The video is concise and teaches how to make a list randomize, how to make the list not use the same item twice, and how to reload the list, which is exactly what I needed to do for my app! If only this tutorial had been around when I was making my app.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-8140-2a68-9080-3fb6b24bf59e&quot; style=&quot;font-size: 13.008px; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lvZi8gvwaZQ&quot;&gt;https://www.youtube.com/watch?v=lvZi8gvwaZQ&lt;/a&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;line-height: 1.2; font-size: 13.008px;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; white-space: pre-wrap; background-color: transparent;&quot;&gt;Color and Transparency &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-8140-2a68-9080-3fb6b24bf59e&quot; style=&quot;font-size: 13.008px; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;Another aspect of my Hilltop Sunset app that took a good deal of time and testing was the color scheme. YouTuber &lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCfltevxoal1xVfk8OdKbWBQ&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(0, 0, 0); white-space: pre-wrap; background-color: transparent;&quot;&gt;Bo Kalvslund&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; white-space: pre-wrap; background-color: transparent;&quot;&gt; made a great tutorial on how to adjust colors, and even create transparency, which is useful when importing your own background image. This can give your app something new and different to help it stand out from other apps!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-8140-2a68-9080-3fb6b24bf59e&quot; style=&quot;font-size: 13.008px; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Q_JGtfvwaMQ&quot;&gt;https://www.youtube.com/watch?v=Q_JGtfvwaMQ&lt;/a&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;line-height: 1.2; font-size: 13.008px;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); font-style: italic; white-space: pre-wrap; background-color: transparent;&quot;&gt;Redirecting to a Website&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span id=&quot;docs-internal-guid-cae3bd25-8140-2a68-9080-3fb6b24bf59e&quot; style=&quot;font-size: 13.008px; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(46, 46, 46); white-space: pre-wrap; background-color: transparent;&quot;&gt;If you can tolerate the silence, YouTuber &lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCFFbCPbrBiUr1jIXC3yioWw&quot;&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; color: rgb(0, 0, 0); white-space: pre-wrap; background-color: transparent;&quot;&gt;Iann Nehc&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 16px; font-family: Cambria; white-space: pre-wrap; background-color: transparent;&quot;&gt; has a tutorial for connecting to specific websites. This was useful for me in my app, since I have a main webpage and really wanted to have easy access to it while using the app, just in case. This function within MIT App Inventor can be useful for any app that includes information from the internet, including content creators that may want users of their app to access portfolios, galleries, or other public information. &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:1.2;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 16px; line-height: 1.538em; font-family: Cambria; color: rgb(17, 85, 204); text-decoration: underline; white-space: pre-wrap; background-color: transparent;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0ofvhYq0ES8&quot; style=&quot;font-size: 16px; line-height: 1.538em;&quot;&gt;https://www.youtube.com/watch?v=0ofvhYq0ES8&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 19 Oct 2015 18:16:28 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">654 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Making the Hilltop Sunset App Part 3: Linking Websites and Changing Colors</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/10/maki-0</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;After figuring out how to add all my lyrics, and display them in an easy-to-read format, I was finally starting to get the hang of navigating all the different block types MIT App Inventor had to offer, and getting a strong sense of what they did and what they were capable of. I kept wanting to expand the app and make it more complex, so I had to think of other functions that could benefit me or someone interested in my music. &lt;/p&gt;
&lt;p&gt;The first thing that came to my mind was creating a button that linked straight to my main web page, where there are links to all my social media, songs I have uploaded, blog posts I’ve written, and many other things. Making a link to a webpage turned out to be pretty simple: first, I created a button that read “Website.” Then I jumped over the the Blocks tab, found my Website button, pulled out the “when .Click” block, and set it down. &lt;/p&gt;
&lt;p&gt;But before I could make the button link to my website, I had to hop back over to the Designer tab momentarily, because I’d forgotten a necessary step. Under Connectivity in the lefthand Palette there is an option called ActivityStarter. I had to drag that over and drop it onto my app, thereby setting a new, non-visible component that showed below the preview screen. &lt;/p&gt;
&lt;p&gt;Once that was done, I went back to the Blocks tab and located the new Activity Starter menu, which had everything I needed: set ActivityStarter DataUri, set ActivityStarter Action, and call ActivityStarter .StartActivity. I set these into the “when Website .Click” block in the order I mentioned them from top to bottom. For the DataUri block, I connected a blank textbox and input my website’s URL. The Action block needed to have a textbox with the text “android.intent.action.VIEW” in order to function properly, and the .StartActivity block needed no additions. &lt;/p&gt;
&lt;p&gt;At this point I felt like I basically had everything I wanted, but just to take it a step further, I decided to update the Wheel-O-Songs to include two extra buttons--one for each of my albums. So I took the simple steps from Part 1, making buttons with my album titles above and below the main Wheel-O-Songs button in the middle. When clicked, I set it changed the text on the middle button to a random song within the album clicked. To do this I just established two separate lists containing only songs from the respective albums. The middle button still caused the randomizer to select a random song from either album, which I liked. &lt;/p&gt;
&lt;p&gt;And with that, my app was all done! At least, mechanically. I tested all the functions as I went, made sure they worked as they were supposed to, and once I was sure things were working as intended, I decided I wasn’t happy with the default colors offered by MIT App Inventor; they were all very bright and clashing. I wanted to manually select a few colors to keep a consistent color scheme with my main website. &lt;/p&gt;
&lt;p&gt;Unfortunately I was not able to find any easy way to establish a new color palette for my app. The only way I could see to do it was to change every aspect of every screen individually, piece by piece. So I did. I used this website to find the codes for the colors I wanted to use, and proceeded to meticulously set the colors for my backgrounds, texts, buttons, and labels using the “make color” block under Colors. I used the “when .Initialize” block under the screen options for every screen to make the colors set themselves immediately upon each screen opening. I connected my phone to App Inventor, checked every screen to make sure I’d changed all the colors and that the new colors were correct, and was done!&lt;/p&gt;
&lt;p&gt;After researching tutorials and info from the MIT App Inventor site directly and experimenting on my own for several hours a day over 4 or 5 days, my android app was finally complete. Despite my lack of pre-existing knowledge or experience with programming, I had successfully put together enough puzzle pieces to call myself an app inventor. &lt;/p&gt;
&lt;p&gt;Overall, my first experience with MIT App Inventor was a great success. I’m really happy with the program, and with my app, and I definitely encourage anyone else who enjoyed problem solving to give MIT App Inventor a try! Not only was it fun, but it produced a useful tool that I now have forever. &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;div id=&quot;file-21134&quot; class=&quot;file file-image file-image-png&quot;&gt;

        &lt;h2 class=&quot;element-invisible&quot;&gt;&lt;a href=&quot;/file/21134&quot;&gt;Main Page.png&lt;/a&gt;&lt;/h2&gt;
    
  
  &lt;div class=&quot;content&quot;&gt;
    &lt;img typeof=&quot;foaf:Image&quot; class=&quot;image-style-none&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/blog/Main%20Page.png&quot; alt=&quot;&quot; /&gt;  &lt;/div&gt;

  
&lt;/div&gt;
              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Wed, 14 Oct 2015 17:26:45 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">651 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Making the Hilltop Sunset App Part 2: Problem Solving and Creating a Song List</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/10/making</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;Well, it turns out I was right; I was able to make lists delete entries as I’d set out to do at the end of my last post! &lt;/p&gt;
&lt;p&gt;It was a bit more complicated than anything else I had done: I had to combine a “Remove List Item” block with an “Index Item” block where the indexed “thing” was joined to a block listing my Wheel-O-Songs button with its current text. That way, it would remove that item from the specified list! Once that was accomplished, I figured it’d be good to include some text letting the user know they’ve reached the end of the list. And after that, I was done! &lt;/p&gt;
&lt;p&gt;...but then I started thinking of some other additions for my lackluster app. Before I knew it, I had a whole slew of upgrades to the app that I had never planning on incorporating, including a song list from two albums of mine, with lyrics; two additional randomizer buttons that selected only songs from a specified album; and a link to my main website. &lt;/p&gt;
&lt;p&gt;Because of the new direction I was taking my app, I figured a Home page would benefit me, so I made a new screen, included a label with the title “Hilltop Sunset” (the name of my music project) and added 3 buttons: Visit Main Website, View Song List, and Wheel-O-Songs. After this, I made corresponding screens for those buttons to redirect when clicked. &lt;/p&gt;
&lt;p&gt;I really wanted to include a list of songs and their lyrics because people often ask to know what my lyrics are, whether because they’re hearing a song for the first time and want to make sure they catch every word or because they want to sing along. To do this, I first experimented with some of the basic list options available in the Designer tools, but after testing ListPicker and ListView I decided that neither could adequately accomplish what I wanted. I ended up making individual Buttons for every song--at this point there were 22 of them instead of just the 16 from Part 1--and sorted them by album. &lt;/p&gt;
&lt;p&gt;The next task was to figure out how I was going to include the lyrics. To do this, I tried making a label and changing its text to a huge body of lyrics when a specified song was clicked. Unfortunately I ran into several problems, mostly that the text ran straight off the phone’s window because there didn’t seem to be any way to put the text on multiple lines. &lt;/p&gt;
&lt;p&gt;When I added a textbox instead of a label, the multiline option became available from the Design window, but the formatting was atrocious; the whole song was just a block of text mushed together with no defined line breaks. After some quick research, I discovered that including “\n” in the text created a line break! I went through and typed out my lyrics, including “\n” with every break, and it worked like magic! I was so thrilled to finally see my lyrics--well-formatted--displayed whenever I clicked a song. The lyrics popped up directly underneath the name of the album the song was from, just as they were supposed to. &lt;/p&gt;
&lt;p&gt;The only thing about using a textbox instead of a label is that it’s able to be edited in the app. This was fine in my instance, since the changes aren’t ever saved when input, and the app was intended for personal use anyway. But if you don’t want people having the ability to edit your text, perhaps you’ll be better off finding another way to work around the limitations. &lt;/p&gt;
&lt;p&gt;Next week I’ll go over how I linked my website, added the album-specific randomizers, and changed the colors of...everything. Because the default colors are very harsh and clashing. Stay tuned! &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Tue, 06 Oct 2015 13:41:17 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">642 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Making the Hilltop Sunset App Part 1: Wheel-O-Songs, a List Randomizer</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/09/making</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;Today I built my very own original app on MIT App Inventor.&lt;/p&gt;
&lt;p&gt;I’m not a computer scientist, I’m not an expert programmer, and I’ve never taken any classes on the subject; I’m just a singer/songwriter with a degree in English and Creative Writing--and a dream. But even with literally zero knowledge of coding, MIT App Inventor’s simple building-block style (with the help of a handful of tutorials scattered about YouTube) allowed me to take a basic concept and turn it into a functional program within a little over an hour.&lt;/p&gt;
&lt;p&gt;I didn’t start with any particularly revolutionary ideas; I just thought it would be fun to have a program that would randomly select one of my original songs at the push of a button. That way, if anyone ever wanted me to play something and inevitably couldn’t decide what, I could open this app, hit the button, and voila! An answer!&lt;/p&gt;
&lt;p&gt;Taking care of the app’s design was quick and simple: the display was shown immediately and a list of items--buttons, lists, images, etc.--was available for me to drag and drop, adding them instantly to my app and providing me with a list of options to customize how each item appeared on-screen. All I needed for my app was a single button that read “Wheel-O-Songs” and I was good to go. I changed the font color, background color, centered it, enlarged it, and was ready to work on making it a functional button.&lt;/p&gt;
&lt;p&gt;Though the language and functions of App Inventor did take some getting used to, fluency comes with practice. The majority of blocks are fairly easy to understand, provided you read them with the right mindset. In most instances the blocks read as normal English, but stripped down to only its essential, basic components. For example, there is a block that reads “When Button1 .Click, do _______,” and you can fill in the blank with any number of command blocks. Basically all that block means is, “When Button1 is clicked, it will perform the command ________.” I used this block in my app in conjunction with a “randomize list” command block so that when my Wheel-O-Songs button is clicked, it randomly selects an item from a specified list and changes the text of the button to the new selected item.&lt;/p&gt;
&lt;p&gt;I quickly discovered the blocks are not always self-explanatory to newcomers. For instance, the “initialize global” block confused me at first, since I wasn’t familiar with the concept of global variables or what exactly that meant, or how it could be useful for my app. As it turned out, the “initialize global” block allowed me to host a long list that I could then access through the much simpler “get” block. I could then continue to use the “get” block within other functions, rather than deal with a 16 item list over and over again. This is especially useful when utilizing a list over multiple other functions, because it saves time and space.&lt;/p&gt;
&lt;p&gt;My app was not complicated by any means. It only required a total of two different “buildings” of blocks: the first specified what the single button on my app would do (select a random item from a specified list), and the other held the information for the list that was being randomized (a 16 item list of original songs). I’d like at some point to also figure out a way for items on the list that have already been displayed to be removed from the list so that songs won’t show up more than once, but so far I have had no success. I’m entirely confident it’s possible to do, I just have to figure it out!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 21 Sep 2015 13:11:41 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">637 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>My First Impression of App Inventor</title>
 <link>http://explore.appinventor.mit.edu/blogs/ryan/2015/09/my</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;Have you ever caught yourself thinking “I wish there was an app for that”? Maybe you wished there was a one-click rimshot on your phone to punctuate your bad jokes, or perhaps you’ve always wanted an interactive grocery list that knows all your favorite foods so you don’t have to write them down every time. At this point, let’s be honest: that app probably already exists. Just use your Google Play store and run a search, you’ll probably find what you’re looking for.&lt;/p&gt;
&lt;p&gt;But what if your search yields no results? What if your app hasn’t already been created? What if your idea is so original, no one has thought to make anything like it before? Well, in that case, you’re in luck, because there’s a simple way to build that app yourself and it doesn’t require years of software engineering experience or schooling. All it requires is putting blocks together.&lt;/p&gt;
&lt;p&gt;MIT App Inventor is an innovative beginner&#039;s introduction to programming and app creation for Android that transforms the complex language of text-based coding into visual, drag-and-drop building blocks. The simplistic graphical interface grants even an inexperienced novice the ability to create a basic, fully functional app within an hour or less.&lt;/p&gt;
&lt;p&gt;The limits of MIT App Inventor are established only by the imagination of the user. While the format&#039;s simplicity allows newcomers to easily understand the basics of programming, it does not inhibit more advanced app creation; children and professionals alike can take advantage of App Inventor&#039;s potential. Whether it&#039;s something simple like creating an app that reminds you you&#039;re beautiful &lt;a href=&quot;https://youtu.be/sNjGAiOrX-o&quot;&gt;any time you take a picture&lt;/a&gt;, or something more complex like &lt;a href=&quot;https://medium.com/@Arjuninventor/lateralogics-launches-locatera-pro-the-most-innovative-mobile-app-solution-to-track-children-in-38f54709b081&quot;&gt;tracking bus and student information&lt;/a&gt;, MIT App Inventor supplies the necessary building blocks to create any app imaginable.&lt;/p&gt;
&lt;p&gt;Because of the game-like quality of MIT App Inventor’s block-based construction process, the program is highly conducive to engaging young audiences and encouraging them to transition from consumers of technology to creators of it. Children from all over the world are picking up the program with no knowledge of software engineering and constructing &lt;a href=&quot;http://medford.wickedlocal.com/article/20150817/NEWS/150817161&quot;&gt;incredible apps&lt;/a&gt;. One group of students from Los Fresnos, Texas was invited to the 2014 White House Science Fair for the development of an app entitled &lt;a href=&quot;http://www.brownsvilleherald.com/news/local/article_d68ff3de-e227-11e3-8ae3-0017a43b2370.html&quot;&gt;Hello, Navi!&lt;/a&gt; This app was designed to assist the visually impaired in navigating their school.&lt;/p&gt;
&lt;p&gt;Whether building practical apps geared toward helping a great deal of people with everyday challenges, or just finding news ways to make people smile, MIT App Inventor has limitless potential for users of all skill levels. With nearly 3 millions users in 195 countries having created over 7 million apps to date, the numbers are only growing, and based on the results so far that can only mean great things for the future of MIT App Inventor, and for the world.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 14 Sep 2015 13:37:19 +0000</pubDate>
 <dc:creator>Ryan</dc:creator>
 <guid isPermaLink="false">631 at http://explore.appinventor.mit.edu</guid>
</item>
</channel>
</rss>
